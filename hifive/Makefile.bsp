ISP_PREFIX ?= $(HOME)/.local/isp/
ARCH ?= rv32
ARCH_XLEN = $(subst rv,,$(ARCH))

LIBBSP ?= libbsp.a
INSTALL_DIR ?= $(ISP_PREFIX)/bsp/hifive/ap

ISP_CFLAGS   += -O2 -fno-builtin-printf -mno-relax
ISP_CFLAGS   += --sysroot=${ISP_PREFIX}/clang_sysroot/riscv64-unknown-elf
ISP_INCLUDES += -I$(ISP_PREFIX)/clang_sysroot/riscv64-unknown-elf/include

RISCV_PATH    ?= $(ISP_PREFIX)
RISCV_CLANG   ?= $(abspath $(RISCV_PATH)/bin/clang)
RISCV_OBJDUMP ?= $(abspath $(RISCV_PATH)/bin/llvm-objdump)
RISCV_GDB     ?= $(abspath $(RISCV_PATH)/bin/riscv64-unknown-elf-gdb)
RISCV_AR      ?= $(abspath $(RISCV_PATH)/bin/llvm-ar)

CC = $(RISCV_CLANG)

ifneq ($(ARCH), rv64)
	RISCV_ARCH ?= rv32ima
	RISCV_ABI ?= ilp32
	ISP_CFLAGS += --target=riscv32-unknown-elf
else
	RISCV_ARCH ?= rv64imafd
	RISCV_ABI ?= lp64d
	ISP_CFLAGS += --target=riscv64-unknown-elf -mcmodel=medany
endif
ISP_LDFLAGS += -fuse-ld=lld

BOARD ?= freedom-e300-hifive1
LINK_TARGET ?= flash

BSP_BASE = bsp

ISP_LIBS = $(BSP_BASE)/libwrap/libwrap.a

include $(BSP_BASE)/env/common.mk

$(LIBBSP): $(C_OBJS) $(ASM_OBJS) $(LIBWRAP_OBJS)
	$(AR) rcs $@ $^

all: libbsp

.PHONY: libwrap install-libwrap clean-libwrap

libbsp: $(LIBBSP)

install: $(LIBBSP)
	mkdir -p $(INSTALL_DIR)/lib
	mkdir -p $(INSTALL_DIR)/include
	cp $(LIBBSP) $(INSTALL_DIR)/lib
	cp -R $(wildcard bsp/include/*) $(INSTALL_DIR)/include
	cp bsp/env/hifive1.h bsp/env/encoding.h $(INSTALL_DIR)/include
	cp bsp/env/$(BOARD)/platform.h $(INSTALL_DIR)/include
	cp bsp/env/$(BOARD)/$(LINK_TARGET).lds $(INSTALL_DIR)

clean:
	rm -f $(LIBWRAP_OBJS) $(C_OBJS) $(LIBBSP)